<?php

namespace Modules\{{modelName}}\Http\Controllers;

use Modules\{{modelName}}\Models\{{modelNameSingular}};
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Database\Eloquent\ModelNotFoundException;

class {{modelName}}Controller extends Controller
{
    /**
     * @var {{modelNameSingular}}
     */
    private $model;

    /**
     * {{modelName}}Controller constructor.
     * @param {{modelNameSingular}} $model
     */
    public function __construct({{modelNameSingular}} $model)
    {
        $this->model = $model;
    }

    /**
     * @return \Illuminate\Http\JsonResponse
     */
    public function index()
    {
        try {
            $data = $this->model::latest()->get();

            return response()->json([
                $data
            ], 201);
        } catch (ModelNotFoundException $e) {
            return response->json([
                $e->getMessage(),
                $e->getCode()
            ], $e->getCode());
        }
    }

    /**
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function store(Request $request)
    {
        try {
            $data = $this->model::create($request->all());

            return response()->json([
                $data
            ], 201);
        } catch (ModelNotFoundException $e) {
            return response->json([
                $e->getMessage(),
                $e->getCode()
            ], $e->getCode());
        }
    }

    /**
     * @param $id
     * @return \Illuminate\Http\JsonResponse
     */
    public function show($id)
    {
        try {
            $data = $this->model::findOrFail($id);

            return response()->json([
                $data
            ], 201);
        } catch (ModelNotFoundException $e) {
            return response->json([
                $e->getMessage(),
                $e->getCode()
            ], $e->getCode());
        }
    }

    /**
     * @param Request $request
     * @param $id
     * @return \Illuminate\Http\JsonResponse
     */
    public function update(Request $request, $id)
    {
        try {
            $data = $this->model::findOrFail($id);
            $data->update($request->all());

            return response()->json([
                $data
            ], 201);
         } catch (ModelNotFoundException $e) {
            return response->json([
                $e->getMessage(),
                $e->getCode()
            ], $e->getCode());
        }
    }

    /**
     * @param $id
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy($id)
    {
        try {
            $data = $this->model::destroy($id);

            return response()->json([
                $data
            ], 201);
        } catch (ModelNotFoundException $e) {
            return response->json([
                $e->getMessage(),
                $e->getCode()
            ], $e->getCode());
        }
    }
}
